<!doctype html>
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />

	<title>I am younes benaomar. I do stuff. you probably don't care.</title>
	<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"></meta>
	<meta http-equiv="cache-control" content="no-cache">
	<meta name="robots" content="index, follow"></meta>
	<meta name="distribution" content="global"></meta>
	<meta name="description" content="Younes BENAOMAR. Developper."></meta>
	<meta name="keywords" content="personal,graphic design, photography, younes benaomar"></meta>
	
	<link rel="stylesheet" media="screen" type="text/css" href="stylesheets/styles.css" />
	

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-33129420-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
</head>


<body>


  <canvas id="canvas"></canvas>
  
<div id="main">
	<div id="text">
		<h1>Hello </h1>

		  <h2>Iâ€™m <strong>Younes BENAOMAR</strong>, a user experience developer currently in Toulouse France.<br/> I occasionally snap <a href="http://www.flickr.com/photos/younes">photos</a>,
		 <a href="http://twitter.com/interactobject" rel="me">tweet</a>
      my going-ons, share <a href="https://github.com/interactiveobject" rel="me">tech codes</a>
      and post to my&nbsp;<a href="http://thumblr.interactive-object.com/" rel="me">scrapbook</a>.
	  </h2>
	  <h1>Experiments</h1>
	  <h2>
		<ul>
			<li>Realtime Map geolocatization : <a href="http://afternoon-moon-6385.herokuapp.com/" rel="me" target="_blank">link</a>.</li>
		</ul>

		
		</h2>
	</div>	
	
	<br />
	<!--
	<a href="#" class="clear-button">clear</a>
	-->
</div>





<div id="cursor_container">
<div id="cursor" class="cursor"></div>
</div>


<script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>
<script type="text/javascript" src="/javascripts/underscore.js"></script>
<script type="text/javascript" src="/javascripts/socket.io.js"></script>
<script type="text/javascript" src="/javascripts/jquery.backstretch.min.js"></script>
<script type="text/javascript" src="/javascripts/jquery.event.drag-2.2.js"></script>
<script type="text/javascript" src="/javascripts/jquery.event.drag.live-2.2.js"></script>



<script>
  
  
 
  
  
  $(document).ready(function() {	
  
  

    var lastPoints = [];
    var easing = 0.4;
    var drawing = [];
    var users =[];
    var drawbuffer;
    
  
    var canvas = document.getElementById("canvas");
    var context = canvas.getContext('2d');

    // resize the canvas to fill browser window dynamically
    window.addEventListener('resize', resizeCanvas, false);

  
      		
    
  
 
  
    context.strokeStyle = "rgba(255,217,0,0.1)";
    context.fillStyle = "rgba(255,217,0,0.1)";
    context.lineWidth = 10;
    context.lineCap = "round";          
    context.lineJoin = "round"
      
      // sockets
      var socket = io.connect('http://');
      
      socket.on('user-connected', function (data) {
        console.log("user connected :",data.id);
        users[data.id] = data;
        $('#cursor').clone().appendTo('#cursor_container').attr('id',"cursor-"+data.id).append("<b>user"+data.id+"</b>");
      });
      
      socket.on('users-connected', function(data){
        
        for (var i=0;i<data.length;i++){
          var current = data[i];
          
          $('#cursor').clone().appendTo('#cursor_container').attr('id',"cursor-"+current.id).append("<b>user"+current.id+"</b>");
          
          if(current.cursor) setCursor(current.id, current.cursor.x, current.cursor.y);
          //create cursor here
          users[current.id] = current;
        }

      });
      
      socket.on('user-disconnected', function (data) {
        console.log("user disconnected :",data);
        var user = users[data.id]
        if(user){
        
          // delete cursor here
          $("#cursor-"+data.id).remove();
          delete users[user.id];
        }
      });
      
       socket.on('receive-mousemove', function (data) {
        setCursor(data.id, data.cursor.x, data.cursor.y);
       });
       
       socket.on('receive-draw', function (line) {
        drawing.push(line);
         drawline(line);
       });
       
       
       socket.on('receive-draw-bulk', function (lines) {
       
        for(var i=0; i<lines.length;i++){
          // add lines to local draw buffer
          drawing.push(lines[i]);
        }
        
        drawlines(lines);
        
       });
       
       socket.on('receive-draw-clear', function(){
         drawing = [];
          context.clearRect(0, 0, canvas.width, canvas.height);
       });
       
      // TODO register id in cookie
      socket.emit("new-user", {id:  Math.round(Math.random() * 10000)});
      
      
   
  $(".clear-button").click(function()
  {
     
     socket.emit('draw-clear');
    
  });
  
  
  $('#canvas').live('drag dragstart dragend', function(e) {
  
    var type = e.handleObj.type;
    draw(e.clientX , e.clientY, type);
    
  });
  
   $(document).bind('mousemove', function(e){
        socket.emit('mousemove', { x:  e.pageX/$(window).width()  , y:   e.pageY/$(window).height()  });
      })
  
  
  
  
      
      function draw(x, y, type) {
      
        if (type === "dragstart") {
          drawbuffer = [];
          context.beginPath();
          drawbuffer.push({x: x,y: y});
          return context.moveTo(x, y);
        } else if (type === "drag") {
          drawbuffer.push({x: x,y: y});
          context.lineTo(x, y);
          context.strokeStyle = "rgba(255,217,0,1)";
          context.fillStyle = "rgba(255,217,0,1)";
          context.lineWidth = 10;
          context.lineCap = "round";          
          context.lineJoin = "round"
          return context.stroke();
        } else {
          // add the line
           drawing.push(drawbuffer);
           socket.emit('draw', drawbuffer);
          return context.closePath();
        }
      };
      

    // Get the coordinates for a mouse or touch event
    function getCoords(e) {
    	if (e.offsetX) {
    		return { x: e.offsetX, y: e.offsetY };
    	}
    	else if (e.layerX) {
    		return { x: e.layerX, y: e.layerY };
    	}
    	else {
    		return { x: e.pageX - canvas.offsetLeft, y: e.pageY - canvas.offsetTop };
    	}
    }
    
    

    
  
  function drawlines(lines){
  
    for(var i=0; i<lines.length;i++)
        {
          var line = lines[i];
          drawline(line);
        }
  }
  
  function drawline(line){
    context.beginPath();
         context.moveTo(line[0].x, line[0].y);
         for (var i=1;i<line.length;i++){
          var p = line[i];
          context.lineTo(p.x, p.y);
          context.strokeStyle = "rgba(255,217,0,0.1)";
          context.fillStyle = "rgba(255,217,0,0.1)";
          context.lineWidth = 10;
          context.lineCap = "round";          
          context.lineJoin = "round"       
          context.stroke();
        } 
        
        context.closePath();
        
  }
      
  
  function setCursor(id, x, y){
    var pageX = x * $(window).width();
    var pageY = y * $(window).height();
    $("#cursor-"+id).css({left:  pageX, top:   pageY });
  }
  
      
    
    function resizeCanvas() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;

            /**
             * Your drawings need to be inside this function otherwise they will be reset when 
             * you resize the browser window and the canvas goes will be cleared.
             */
             
            drawlines(drawing);
           
    }
   
    $.getJSON("http://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=e606900de034115b34006a4dcf2c5766&user_id=58821970@N00&photoset_id=72157629696932450&format=json&jsoncallback=?", function(data){
      
       
        if (data.stat != "ok"){

      // something broke!
      return;
    }
    var photo = data.photoset.photo[Math.floor(Math.random()*data.photoset.photo.length)];
    var url = "http://farm"+photo.farm+".static.flickr.com/"+photo.server+"/"+photo.id+"_"+photo.secret+"_b_d.jpg"
    
    $.backstretch(url, {speed: 500}, 
    function()
    {
    resizeCanvas();
    });
    
      
    });




       
     
     
  
});  
  
    
</script>


</body>
</html>
